<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>
    <style>
        body 
         /* General Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto', sans-serif;
    background-color: #f4f7fc;  /* Light gray background */
    color: #333;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

/* Container */
.container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 20px;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    text-align: center;
}

/* Header */
h1 {
    color: #fff;
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: #2c6e49;
    border-radius: 8px;
}

/* Balance Section */
.balance-section {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

.balance-section h2, .balance-section h3 {
    margin: 0;
    color: #64b3b1; /* Lighter green for balance section */
}

/* Transaction Form */
.transaction-form {
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
}

.transaction-form input,
.transaction-form select,
.transaction-form button {
    padding: 12px;
    margin: 8px 0;
    font-size: 16px;
    border-radius: 6px;
    border: 1px solid #81c784; /* Light green border */
    background-color: #e8f5e9; /* Light green background */
}

.transaction-form button {
    background-color: #2c6e49; /* Dark green for buttons */
    color: white;
    cursor: pointer;
    border: none;
    transition: background-color 0.3s, transform 0.2s;
}

.transaction-form button:hover {
    background-color: #64b3b1; /* Lighter green on hover */
    transform: translateY(-3px);
}

.transaction-list {
    list-style-type: none;
    padding: 0;
}

.transaction-item {
    display: flex;
    justify-content: space-between;
    padding: 12px;
    margin-bottom: 12px;
    border-radius: 6px;
    background-color: #f1f8e9; /* Light green background */
    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);
}

.income {
    color: #388e3c; /* Green for income */
}

.expense {
    color: #d32f2f; /* Red for expense */
}

/* Logout Button */
.logout-button {
    margin-top: 20px;
    padding: 12px 20px;
    background-color: #d32f2f; /* Red for logout */
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
}

.logout-button:hover {
    background-color: #c62828; /* Darker red on hover */
}


    </style>
</head>
<body>
    <div class="container">
        <h1>Expense Tracker</h1>
        <div class="balance-section">
            <div>
                <h2>Balance: $<span id="balance">0</span></h2>
                <h3>Income: $<span id="income">0</span></h3>
                <h3>Expenses: $<span id="expenses">0</span></h3>
            </div>
            <button class="logout-button" id="logoutButton">Log Out</button>
        </div>

        <form id="transaction-form" class="transaction-form">
            <input type="text" id="description" placeholder="Description" required>
            <input type="number" id="amount" placeholder="Amount" required>
            <select id="type">
                <option value="income">Income</option>
                <option value="expense">Expense</option>
                <option value="withdraw">Withdraw</option>
            </select>
            <button type="submit">Add Transaction</button>
        </form>

        <h2>Transactions</h2>
        <ul id="transaction-list" class="transaction-list"></ul>
    </div>

    <script>
        let transactions = [];
        const form = document.getElementById('transaction-form');
        const transactionList = document.getElementById('transaction-list');
        const logoutButton = document.getElementById('logoutButton');

  document.getElementById('transaction-form').addEventListener('submit', async (e) => {
    e.preventDefault(); // Prevent the default form submission

    const description = document.getElementById('description').value;
    const amount = document.getElementById('amount').value;
    const type = document.getElementById('type').value;

    try {
      const response = await fetch('/transactions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ description, amount, type }),
      });

      if (response.ok) {
        const transaction = await response.json();
        console.log('Transaction added:', transaction);
        // Optionally, update the UI with the new transaction
      } else {
        const error = await response.json();
        console.error('Error:', error.message);
      }
    } catch (error) {
      console.error('Error submitting transaction:', error);
    }
  });


        form.addEventListener('submit', addTransaction);
        logoutButton.addEventListener('click', logout);

        function addTransaction(e) {
            e.preventDefault();
            const description = document.getElementById('description').value;
            const amount = parseFloat(document.getElementById('amount').value);
            const type = document.getElementById('type').value;
            const transaction = { description, amount, type };
            transactions.push(transaction);
            updateUI();
            form.reset();
        }

        function updateUI() {
            transactionList.innerHTML = '';
            let balance = 0, income = 0, expenses = 0;
            transactions.forEach(transaction => {
                const li = document.createElement('li');
                li.classList.add('transaction-item');
                li.classList.add(transaction.type);
                li.innerHTML = `
                    <span>${transaction.description}</span>
                    <span>$${transaction.amount.toFixed(2)}</span>
                `;
                transactionList.appendChild(li);
                if (transaction.type === 'income') {
                    income += transaction.amount;
                    balance += transaction.amount;
                } else {
                    expenses += transaction.amount;
                    balance -= transaction.amount;
                }
            });
            document.getElementById('balance').textContent = balance.toFixed(2);
            document.getElementById('income').textContent = income.toFixed(2);
            document.getElementById('expenses').textContent = expenses.toFixed(2);
        }

        // Log out functionality
        function logout() {
            // Here you would typically log the user out by clearing the session/cookie
            // For now, we'll just redirect to the login page.
            window.location.href = "/login";
        }
    </script>
</body>
</html>
